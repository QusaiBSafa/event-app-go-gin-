basePath: /
definitions:
  models.Event:
    properties:
      event_date:
        type: string
      event_name:
        type: string
      id:
        type: integer
      user_id:
        type: integer
    type: object
  models.User:
    properties:
      id:
        type: integer
      username:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: youremail@domain.com
    name: API Support
  description: This is a simple API for managing events.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Event App API
  version: "1.0"
paths:
  /events:
    get:
      description: Retrieve all events in the database
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
      security:
      - Bearer: []
      summary: Get all events
      tags:
      - events
    post:
      consumes:
      - application/json
      description: Create a new event after being authenticated
      parameters:
      - description: Event
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/models.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - Bearer: []
      summary: Create a new event
      tags:
      - events
  /events/today:
    get:
      description: Retrieve events occurring today
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Event'
            type: array
      security:
      - Bearer: []
      summary: Get today's events
      tags:
      - events
  /login:
    post:
      consumes:
      - application/json
      description: Authenticate a user and return a JWT token
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login a user
      tags:
      - auth
  /register:
    post:
      consumes:
      - application/json
      description: Register a new user by providing a username and password
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
